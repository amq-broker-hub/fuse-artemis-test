server.port=0

#logging.level.bszeti.camelspringboot.jmstest=INFO
logging.level.bszeti.camelspringboot.jmstest=TRACE
#logging.level.org.apache.qpid.jms=TRACE

logging.pattern.console=%d{HH:mm:ss.SSS} %highlight(%-5.5p) [%-40.40t] %cyan(%-40.40c{1}) | %msg%n
logging.pattern.file=%d{HH:mm:ss.SSS} %-5.5p [%-40.40t] %-40.40c{1} | %msg%n
#logging.pattern.file=${logging.pattern.console}
logging.file=out.log
logging.file.max-size=100MB
logging.file.clean-history-on-start=true

camel.springboot.message-history=false


connection.type=CORE
connection.remoteUrl=tcp://localhost:61616

# connection.type=AMQP
# connection.remoteUrl=failover:(amqp://localhost:5672)?failover.maxReconnectAttempts=15&failover.amqpOpenServerListAction=IGNORE&jms.prefetchPolicy.all=10
# connection.remoteUrl=failover:(amqps://host1:61616,amqps://host2:61616)?failover.maxReconnectAttempts=15&failover.amqpOpenServerListAction=IGNORE&jms.prefetchPolicy.all=5&jms.forceSyncSend=true

# connection.type=OPENWIRE
# connection.remoteUrl=failover:(tcp://localhost:61616)?maxReconnectDelay=10000&jms.prefetchPolicy.all=100&jms.redeliveryPolicy.maximumRedeliveries=5
# connection.remoteUrl=failover:(tcp://amq-broker-my-acceptor-0.apps.mycluster.com:443)?maxReconnectDelay=10000&jms.prefetchPolicy.all=100&jms.redeliveryPolicy.maximumRedeliveries=5
# Set trustStore on JVM level for OPENWIRE and run the jar:
# java -jar -Dspring.profiles.active=receive -Djavax.net.ssl.trustStore=./certs/client.ts -Djavax.net.ssl.trustStorePassword=changeit target/jmstest-1.0-SNAPSHOT.jar


connection.username=admin
connection.password=admin

# default - receive and sending the same transaction
# receive.forward.propagation=PROPAGATION_REQUIRED
# No transaction during sending, also requires transaction=false for producer. (50%)
# receive.forward.propagation=PROPAGATION_NOT_SUPPORTED
# New transaction to send (10%)
#receive.forward.propagation=PROPAGATION_REQUIRES_NEW

jmscomponent.transacted=false
useCachingConnectionFactory=false
jmspool.maxConnections=10

#receive.enabled=false
receive.enabled=true
receive.concurrentConsumers=1
# receive.transacted=true
receive.queue=q1
receive.delay=0
#receive.cacheLevelName=CACHE_NONE
#receive.cacheLevelName=CACHE_CONNECTION
#receive.cacheLevelName=CACHE_SESSION
# receive.cacheLevelName=CACHE_CONSUMER

#Instead of "receive.queue" and parameters above we can set the whole endpoint:
#receive.endpoint=queue:perftest?concurrentConsumers=20&cacheLevelName=CACHE_CONSUMER
#receive.endpoint=queue:q1?concurrentConsumers=20&transacted=true&cacheLevelName=CACHE_CONSUMER
#receive.endpoint=queue:q1?concurrentConsumers=${receive.concurrentConsumers}&transacted=true&cacheLevelName=CACHE_CONSUMER&lazyCreateTransactionManager=false
#receive.endpoint=queue:perftest?concurrentConsumers=20&transacted=true&cacheLevelName=CACHE_CONSUMER&transactionManager=#myTransactionManager
#receive.endpoint=queue:perftest?concurrentConsumers=20&transacted=true&cacheLevelName=CACHE_CONSUMER&transactionManager=#myTransactionManager&lazyCreateTransactionManager=false


receive.forward.enabled=false
#receive.forward.enabled=false
receive.forward.queue=q1.forward
receive.forward.endpoint=queue:${receive.forward.queue}
# transacted=false is required only if the component has transacted=true
#receive.forward.endpoint=queue:${receive.forward.queue}?transacted=false
receive.forward.delay=0

#send.enabled=true
send.enabled=false
send.endpoint=queue:perftest
send.threads=1
send.message=#{'$'}{exchangeId}/#{'$'}{header.CamelLoopIndex}
send.delay=0
send.count=5
send.headeruuid=_AMQ_DUPL_ID


### Spring's HAWTIO related options ###

#management.server.port=10001

#server.port=8443
#server.ssl.enabled=true
#server.ssl.key-store=selfsigned.jks
#server.ssl.key-password=changeit

# management.endpoints.web.exposure.include=*

# management.endpoints.enabled-by-default = false
# management.endpoint.hawtio.enabled = true
# management.endpoint.jolokia.enabled = true
# management.endpoint.health.enabled = true
# management.endpoint.info.enabled = true

#management.endpoints.web.exposure.include=health, info, hawtio, jolokia

# hawtio.authenticationEnabled=false

# Enable all health indicators (jms, datasource, etc...): https://docs.spring.io/spring-boot/docs/2.1.6.RELEASE/reference/htmlsingle/#_auto_configured_healthindicators
#management.health.defaults.enabled=true
#camel.health.enabled=false
#camel.health.indicator.enabled=true

# Default is "never"
#management.endpoint.health.show-details=when-authorized
#management.endpoint.health.show-details=always

